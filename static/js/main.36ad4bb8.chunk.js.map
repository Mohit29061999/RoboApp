{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/AppRobo.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","console","log","className","alt","src","CardList","robot","cardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","AppRobo","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robo","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCYCQ,EAfF,SAACC,GACV,IAAOC,EAAiBD,EAAjBC,KAAKC,EAAYF,EAAZE,MAAMC,EAAMH,EAANG,GAElB,OADAC,QAAQC,IAAIF,GAEX,sBAAKG,UAAU,sDAAf,UACI,qBAAKC,IAAK,SAASC,IAAG,+BAA0BL,EAA1B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCKFO,EAbE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAGTC,EAAgBD,EAAME,KAAI,SAACC,EAAKC,GAClC,OAAQ,cAAC,EAAD,CAAcX,GAAIO,EAAMI,GAAGX,GAAIF,KAAMS,EAAMI,GAAGb,KAAMC,MAASQ,EAAMI,GAAGZ,OAA3DY,MAEvB,OACI,8BACHH,KCGUI,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKX,UAAY,MAAjB,SACA,uBAAOA,UAAU,mCAAmCY,KAAO,SAASC,YAAY,gBAChFC,SAAUH,OCKHI,G,MATA,SAACrB,GACd,OACI,qBAAKsB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKzB,EAAM0B,aCsBFC,E,kDAvBX,WAAY3B,GAAO,IAAD,8BACd,cAAMA,IACD4B,MAAQ,CACTC,UAAS,GAHC,E,qDAQlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CACVJ,UAAS,M,oBAIjB,WACI,OAAGG,KAAKJ,MAAMC,SACH,yCAGJG,KAAKhC,MAAM0B,a,GArBEQ,aCiEbC,E,kDAzDX,aAAc,IAAD,8BACT,gBAsBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVjB,YAAYqB,EAAMC,OAAOC,SAvB7B,EAAKX,MAAQ,CACTlB,MAAM,GACNM,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACfwB,MAAM,8CAA8C/C,MAAK,SAAAgD,GACrD,OAAOA,EAASC,UAEnBjD,MACG,SAAAkD,GACI,EAAKV,SAAS,CACVvB,MAAMiC,S,oBAcvB,WAAS,IAAD,OACDC,EAAiBZ,KAAKJ,MAAMlB,MAAMmC,QACpC,SAAAC,GACI,OAAOA,EAAK7C,KAAK8C,cAAcC,SAAS,EAAKpB,MAAMZ,YAAY+B,kBAIvE,OAA8B,IAA3Bf,KAAKJ,MAAMlB,MAAMuC,OACT,yCAIP,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWW,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACJ,cAAC,EAAD,CAAU1B,MAAOkC,e,GAhDHV,aCCtBgB,IAASC,OAER,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1B/D,M","file":"static/js/main.36ad4bb8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\n\n\nconst Card = (props) => {\n    const {name,email,id} = props;\n    console.log(id);\n    return (\n     <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n         <img alt= 'robots' src={`https://robohash.org/${id}?200x200`}/>\n         <div>\n             <h2>{name}</h2>\n             <p>{email}</p>\n         </div>\n     </div>\n    );\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robot}) => {\n    \n\n    const cardComponent = robot.map((user,i) => {\n        return  <Card key={i} id={robot[i].id} name={robot[i].name} email = {robot[i].email}/>\n    })\n    return (\n        <div >\n    {cardComponent}\n  </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchField,searchChange}) => {\n    return(\n        <div className = 'pa2'>\n        <input className='pa3 ba b--green bg-lightest-blue' type = 'search' placeholder='search robots'\n        onChange={searchChange}\n        />\n\n\n        </div>\n    )\n}\n\nexport default SearchBox","import React from 'react';\n\n\nconst Scroll = (props) => {\n  return(\n      <div style={{overflowY:'scroll',border:'1px solid black',height:'700px'}}>\n          {props.children}\n      </div>\n  );\n}\n\n\nexport default Scroll","import React,{Component} from 'react';\n\n\nclass ErrorBoundary extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError:false\n        }\n\n    }\n\n    componentDidCatch(error,info ){\n        this.setState({\n            hasError:true\n        })\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1> Error </h1>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","\nimport React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './AppRobo.css'\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\n\nclass AppRobo extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            robot:[],\n            searchField:''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n            return response.json();\n        })\n        .then(\n            users => {\n                this.setState({\n                    robot:users\n                })\n            }\n        );\n      \n       \n    }\n\n    onSearchChange = (event) => {\n        this.setState({\n            searchField:event.target.value\n        })\n     \n    }\n   render(){\n    const filteredRobots = this.state.robot.filter(\n        robo => {\n            return robo.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n        }\n    )\n\n    if(this.state.robot.length ===0){\n        return <h1>Loading</h1>\n    }\n    else{\n    return(\n        <div className='tc'>\n        <h1 className='f2'>Robo Friends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>   \n        <Scroll>\n            <ErrorBoundary>\n        <CardList robot={filteredRobots}/>\n        </ErrorBoundary>\n        </Scroll>\n\n        </div>\n    )\n    }\n   } \n  \n}\n\nexport default AppRobo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons'\n\nimport AppRobo from './containers/AppRobo';\n\nReactDOM.render(\n   \n <AppRobo/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}