{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/AppRobo.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robot","Error","SearchBox","searchField","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","AppRobo","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robo","name","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCYCQ,EAfE,SAAC,GAAY,EAAXC,MAEX,MAAM,IAAIC,MAAM,SCSTC,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKC,UAAY,MAAjB,SACA,uBAAOA,UAAU,mCAAmCC,KAAO,SAASC,YAAY,gBAChFC,SAAUJ,OCKHK,G,MATA,SAACC,GACd,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,aCsBFC,E,kDAvBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHC,E,qDAQlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CACVJ,UAAS,M,oBAIjB,WACI,OAAGG,KAAKJ,MAAMC,SACH,yCAGJG,KAAKX,MAAMK,a,GArBEQ,aCiEbC,E,kDAzDX,aAAc,IAAD,8BACT,gBAsBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVnB,YAAYuB,EAAMC,OAAOC,SAvB7B,EAAKX,MAAQ,CACTjB,MAAM,GACNG,YAAY,IAJP,E,qDAQb,WAAoB,IAAD,OACf0B,MAAM,8CAA8CpC,MAAK,SAAAqC,GACrD,OAAOA,EAASC,UAEnBtC,MACG,SAAAuC,GACI,EAAKV,SAAS,CACVtB,MAAMgC,S,oBAcvB,WAAS,IAAD,OACDC,EAAiBZ,KAAKJ,MAAMjB,MAAMkC,QACpC,SAAAC,GACI,OAAOA,EAAKC,KAAKC,cAAcC,SAAS,EAAKrB,MAAMd,YAAYkC,kBAIvE,OAA8B,IAA3BhB,KAAKJ,MAAMjB,MAAMuC,OACT,yCAIP,sBAAKlC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACJ,cAAC,EAAD,CAAUzB,MAAOiC,e,GAhDHV,aCCtBiB,IAASC,OAER,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1BrD,M","file":"static/js/main.ffe5b257.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robot}) => {\n    if(true){\n        throw new Error('Nooo');\n    }\n\n    const cardComponent = robot.map((user,i) => {\n        return  <Card key={i} id={robot[i].id} name={robot[i].name} email = {robot[i].email}/>\n    })\n    return (\n        <div >\n    {cardComponent}\n  </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchField,searchChange}) => {\n    return(\n        <div className = 'pa2'>\n        <input className='pa3 ba b--green bg-lightest-blue' type = 'search' placeholder='search robots'\n        onChange={searchChange}\n        />\n\n\n        </div>\n    )\n}\n\nexport default SearchBox","import React from 'react';\n\n\nconst Scroll = (props) => {\n  return(\n      <div style={{overflowY:'scroll',border:'1px solid black',height:'700px'}}>\n          {props.children}\n      </div>\n  );\n}\n\n\nexport default Scroll","import React,{Component} from 'react';\n\n\nclass ErrorBoundary extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError:false\n        }\n\n    }\n\n    componentDidCatch(error,info ){\n        this.setState({\n            hasError:true\n        })\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1> Error </h1>\n        }\n\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundary","\nimport React,{Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './AppRobo.css'\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\n\nclass AppRobo extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            robot:[],\n            searchField:''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n            return response.json();\n        })\n        .then(\n            users => {\n                this.setState({\n                    robot:users\n                })\n            }\n        );\n      \n       \n    }\n\n    onSearchChange = (event) => {\n        this.setState({\n            searchField:event.target.value\n        })\n     \n    }\n   render(){\n    const filteredRobots = this.state.robot.filter(\n        robo => {\n            return robo.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n        }\n    )\n\n    if(this.state.robot.length ===0){\n        return <h1>Loading</h1>\n    }\n    else{\n    return(\n        <div className='tc'>\n        <h1 className='f2'>Robo Friends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>   \n        <Scroll>\n            <ErrorBoundary>\n        <CardList robot={filteredRobots}/>\n        </ErrorBoundary>\n        </Scroll>\n\n        </div>\n    )\n    }\n   } \n  \n}\n\nexport default AppRobo;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport 'tachyons'\n\nimport AppRobo from './containers/AppRobo';\n\nReactDOM.render(\n   \n <AppRobo/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}